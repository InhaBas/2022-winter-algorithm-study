# 2839 - 설탕 배달
# 검색하다 동적 계획법이란걸 알 게 되어, 적용시켜 보았습니다.
# 동적 계획법 = 다단계적 문제를 최적화하도록 정형화 시키고 그것으로 문제를 취급
# 이 문제의 경우, 구해야 하는 값에서 3, 5 작은 위치의 값 중 더 작은것에 1을 더한 값이 구하는 값이다.

n = int(input())

lst = [5001] * (n + 5)  # 5000에 1을 더해줘야 한다 = 최소 값을 구해줘야 하기 때문, 크기가 n + 5인 이유는 n이 5보다 작다면 밑에 위배되는 상황이기 떄문.

lst[3] = lst[5] = 1  # 3과 5는 각각 1봉지씩으로 해결 가능, 즉 시작점이다.

for i in range(6, n + 1):  # 5이후인 6부터 n 까지
    lst[i] = min(lst[i - 3], lst[i - 5]) + 1

print(lst[n] if lst[n] < 5001 else -1) #값이 5001보다 작다면 리스트 안의 내용 출력, 하지만 기존으로 설정해둔 값 5001이라면 나눌 수 없다는 뜻이므로 -1을 출력시킨다.
